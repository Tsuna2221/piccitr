{"version":3,"sources":["components/QueryConfig.js","components/SearchBar.js","components/PostDetails.js","components/PostsGrid.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js","assets/svg/Arrow.svg","assets/svg/SubmitSearch.svg","assets/svg/SettingsButton.svg","assets/svg/CloseButton.svg"],"names":["Config","state","sortType","handleChange","e","_this","props","updateQuery","target","value","react_default","a","createElement","className","this","isActive","onChange","name","type","id","defaultChecked","htmlFor","style","display","Component","connect","dispatch","sortBy","SearchBar","subreddit","hideConfig","setState","storeSubreddit","document","getElementById","redirectTo","qs","parse","location","search","preventDefault","window","href","query","onSubmit","autoComplete","placeholder","onClick","src","searchBtn","alt","settingBtn","QueryConfig","withRouter","Details","handlers","embedData","post","handler","includes","domain","undefined","preview","images","source","url","width","split","slice","maxWidth","height","preload","autoplay","muted","loop","maxHeight","webkit-playsinline","media","oembed","thumbnail_url","frameBorder","allow","title","allowFullScreen","controls","autoPlay","secure_media","reddit_video","fallback_url","postData","hideOverlay","Close","rel","permalink","author","ups","num_comments","PostsGrid","posts","replace","masonryOptions","transitionDuration","selectedData","visibleArrow","errorMsg","componentDidMount","r","axios","get","then","res","data","children","catch","sort","goPreviousPage","pathname","postId","goNextPage","showOverlay","isNSFW","over_18","NSFWFlag","backgroundColor","dataType","conditions","image","video","gif","_this2","postsData","map","key","randomColor","luminosity","format","alpha","substr","PostDetails","Arrow","lib_default","elementType","options","disableImagesLoaded","updateOnEachImageLoad","App","BrowserRouter","components_SearchBar","Route","path","component","Boolean","hostname","match","initState","rootReducer","arguments","length","action","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ee3515bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n//Styles\r\nimport '../styles/query-config.css'\r\n\r\nclass Config extends Component {\r\n    render() {\r\n        return (\r\n            <div className={\"config-container \" + this.props.isActive}>\r\n                <div className=\"opt-cell\">\r\n                    <div className=\"item-cell\">\r\n                        <span>Sort by:</span>\r\n                        <ul>\r\n                            <li><input onChange={this.handleChange} className=\"check-with-sortby\" value=\"hot\" name=\"sortby\" type=\"radio\" id=\"hot\" defaultChecked/><label className=\"sortby-for-check\" htmlFor=\"hot\">Hot</label></li>\r\n                            <li><input onChange={this.handleChange} className=\"check-with-sortby\" value=\"new\" name=\"sortby\" type=\"radio\" id=\"new\"/><label className=\"sortby-for-check\" htmlFor=\"new\">New</label></li>\r\n                            <li><input onChange={this.handleChange} className=\"check-with-sortby\" value=\"rising\" name=\"sortby\" type=\"radio\" id=\"rising\"/><label className=\"sortby-for-check\" htmlFor=\"rising\">Rising</label></li>\r\n                            <li><input onChange={this.handleChange} className=\"check-with-sortby\" value=\"controversial\" name=\"sortby\" type=\"radio\" id=\"controversial\"/><label className=\"sortby-for-check\" htmlFor=\"controversial\">Controversial</label></li>\r\n                            <li><input onChange={this.handleChange} className=\"check-with-sortby\" value=\"top\" name=\"sortby\" type=\"radio\" id=\"top\"/><label className=\"sortby-for-check\" htmlFor=\"top\">Top</label></li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div style={{display: 'none'}} className=\"item-cell\">\r\n                        <span>Limit Image Draw nº:</span>\r\n                        <ul>\r\n                            <li><input type=\"text\"/></li><span>Max 100 items (onKeyDown=\"sendSearch()\") </span>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    state = {\r\n        sortType: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.props.updateQuery(e.target.value)\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateQuery: (sortType) => {\r\n            dispatch({type: 'UPDATE_SORT', sortBy: sortType})\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Config);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport qs from 'query-string'\r\n\r\n//Styles\r\nimport '../styles/search-bar.css';\r\n\r\n//Assets\r\nimport searchBtn from '../assets/svg/SubmitSearch.svg'\r\nimport settingBtn from '../assets/svg/SettingsButton.svg'\r\n\r\n//Compontents\r\nimport Config from \"./QueryConfig\";\r\n\r\nclass SearchBar extends Component {\r\n    render() {\r\n        return (\r\n            <div id='SearchBar'>\r\n                <form onSubmit={this.redirectTo} id=\"search-cell\">\r\n                    <input id='subreddit-input' autoComplete=\"off\" onChange={this.storeSubreddit} type=\"text\" className=\"search-input\" placeholder=\"Search subreddit...\"/>\r\n                    <img onClick={this.redirectTo} src={searchBtn} alt=\"none\"/>\r\n                    <img onClick={this.hideConfig} src={settingBtn} alt=\"none\"/>\r\n                </form>\r\n                <Config isActive={this.state.isActive}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        isActive: 'inactive',\r\n        subreddit: ''\r\n    }\r\n    \r\n    hideConfig = () => {\r\n        if(this.state.isActive === 'inactive'){\r\n            this.setState({\r\n                isActive: 'active'\r\n            })\r\n        }else{\r\n            this.setState({\r\n                isActive: 'inactive'\r\n            })\r\n        }\r\n    }\r\n    storeSubreddit = (e) => {\r\n        var value = document.getElementById('subreddit-input').value\r\n        this.props.updateQuery(value)\r\n    }\r\n\r\n    redirectTo = (e) => {\r\n        var value = document.getElementById('subreddit-input').value\r\n        var query = qs.parse(this.props.location.search)\r\n        var undSort = () => {\r\n            if (this.props.query.sortBy === ''){\r\n                return '&sort=hot'\r\n            }else{\r\n                return '&sort=' + this.props.query.sortBy\r\n            }\r\n        }\r\n\r\n        if(value !== ''){\r\n            e.preventDefault();\r\n            window.location.href = '?r=' + this.props.query.subreddit + undSort()\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateQuery: (search) => {\r\n            dispatch({type: 'UPDATE_SEARCH', subreddit: search})\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));","import React, { Component } from 'react';\r\nimport Close from \"../assets/svg/CloseButton.svg\";\r\n\r\n//Styles\r\nimport '../styles/post-details.css'\r\n\r\nclass Details extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'details-container ' + this.props.postData.isActive}>\r\n                <img onClick={this.props.hideOverlay} className=\"closeBtn\" src={Close} alt=\"Close Button\"/>\r\n\r\n                <div id=\"details\">\r\n                    <div className=\"ref-links\">\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://www.reddit.com' + this.props.postData.post.permalink}>Visit Post</a>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.postData.post.url}>Visit Link</a>\r\n                    </div>\r\n                    \r\n                    <a className=\"sub-name\" target=\"_blank\" rel=\"noopener noreferrer\" href={'https://www.reddit.com/r/' + this.props.postData.post.subreddit}><h1>r/{this.props.postData.post.subreddit}</h1></a>\r\n                    <p className=\"author-name\">by: <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://www.reddit.com/u/' + this.props.postData.post.author}>u/{this.props.postData.post.author}</a> - from {this.props.postData.post.domain}</p>\r\n                    <p className=\"title\">{this.props.postData.post.title}</p>\r\n\r\n                    <div className=\"embedded-cell\">\r\n                        {this.embedData(this.props.postData.post, this.state.handlers)}\r\n                    </div>\r\n\r\n                    <span className=\"stats\">Upvotes ({this.props.postData.post.ups}) - Comments ({this.props.postData.post.num_comments})</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        handlers: ['v.redd.it', 'gfycat.com', 'clips.twitch.tv', 'youtube.com', 'youtu.be', 'streamable.com', 'i.imgur.com', 'pornhub.com', 'youporn.com'],\r\n    }\r\n\r\n    embedData = (post, handler) => {\r\n        if(!handler.includes(post.domain) && post.preview !== undefined){\r\n            return <img src={post.preview.images[0].source.url} style={{width: '1500px'}} alt=\"\"/>\r\n    \r\n        }else if(post.domain === 'i.imgur.com' && post.url.split('.').slice(-1)[0] === 'png'){\r\n            return <img src={post.preview.images[0].source.url} style={{maxWidth: 'auto', width: '1500px' ,height: 'auto'}} alt=\"\"/>\r\n\r\n        }else if(post.domain === 'i.imgur.com' && post.url.split('.').slice(-1)[0] === 'jpg'){\r\n            return <img src={post.preview.images[0].source.url} style={{maxWidth: 'auto', width: '1500px' ,height: 'auto'}} alt=\"\"/>\r\n\r\n        }else if(post.domain === 'i.imgur.com' && post.url.split('.').slice(-1)[0] === 'gifv'){\r\n            return <video preload=\"auto\" autoplay=\"autoPlay\" muted=\"muted\" loop=\"loop\" style={{width: '1500px', maxHeight: '500px'}} webkit-playsinline=\"\"><source src={'//i.imgur.com/'+ post.url.split('/').slice(-1)[0].split('.')[0] +'.mp4'} type=\"video/mp4\"/></video>\r\n        \r\n        }else if(post.domain === 'youtube.com' || post.domain === 'youtu.be'){\r\n            return <iframe className=\"youtube-embed\" src={'https://www.youtube.com/embed/' + post.media.oembed.thumbnail_url.split('/')[4]} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" title=\"youtube\" allowFullScreen  style={{width: '1500px', maxHeight: 'auto', height: '1500px'}} ></iframe>\r\n        \r\n        }else switch(post.domain){\r\n            case 'v.redd.it':\r\n                return <video controls autoPlay loop src={post.secure_media.reddit_video.fallback_url} style={{width: '100%', height: '100%', maxHeight: '500px'}}></video> \r\n\r\n            case 'clips.twitch.tv':\r\n                return <iframe className=\"twitch-embed\" title=\"twitch\" src={'https://clips.twitch.tv/embed?clip=' + post.url.split('/').slice(-1)[0]} frameBorder=\"0\" allowFullScreen=\"true\" width=\"1500px\" height=\"300px\"></iframe>                    \r\n\r\n            case 'streamable.com':\r\n                return <iframe className=\"stream-embed\" title=\"stream\" src={'https://streamable.com/s/' + post.url.split('/').slice(-1)[0]} frameBorder=\"0\" width=\"1500px\" height=\"300\" allowFullScreen></iframe>  \r\n\r\n            case 'gfycat.com':\r\n                return <iframe className=\"gfycat-embed\" title=\"gfycat\" src={'https://gfycat.com/ifr/' + post.url.split('/').slice(-1)[0]} frameBorder='0'  allowFullScreen width=\"1500px\" height= \"300px\"></iframe>\r\n                \r\n            case 'pornhub.com':\r\n                return <iframe className=\"pornhub-embed\" title=\"pornhub\" src={'https://pt.pornhub.com/embed/' + post.url.split('?')[1].split('=')[1].split('&')[0]} frameBorder=\"0\" width=\"1500px\" allowFullScreen></iframe>\r\n\r\n            case 'youporn.com':\r\n                return <iframe className=\"youporn-embed\" title=\"youporn\" src={'https://www.youporn.com/embed/' + post.url.split('/')[4]} frameBorder=\"0\" width='1500px' allowFullScreen></iframe>\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from 'react';\r\nimport Masonry from 'react-masonry-component';\r\nimport randomColor from 'randomcolor';\r\nimport Arrow from '../assets/svg/Arrow.svg'\r\nimport Details from './PostDetails'\r\nimport axios from \"axios\";\r\nimport qs from 'query-string'\r\n\r\n//Components\r\n\r\n//Styles\r\nimport '../styles/posts-grid.css'\r\n\r\n\r\nclass PostsGrid extends Component {\r\n    render() {\r\n        //HTML Set -- Posts\r\n        const postsData = this.state.posts.map(post => {\r\n            if(post.data.domain.split('.')[0] !== 'self' && post.data.preview !== undefined){\r\n                return (\r\n                    <div key={post.data.name} className=\"post-cell\">\r\n                        <div className=\"image\">\r\n                            <span className=\"flag data-type\" style={{backgroundColor: randomColor({luminosity: 'dark', format: 'rgba', alpha: 0.8 })}}>\r\n                                {this.dataType(post.data)} \r\n                            </span>\r\n                            \r\n                            {this.NSFWFlag(post.data)}\r\n\r\n                            <img src={post.data.preview.images[0].source.url} className={'image-cell '/* + this.isNSFW(post.data)*/} alt={'Post:' + post.data.title.substr(0, 20)}/>\r\n\r\n                        </div>\r\n                        <div className=\"post-overlay\" onClick={() => this.showOverlay(post.data)} style={{backgroundColor: randomColor({luminosity: 'dark', format: 'rgba', alpha: 0.8 })}}>\r\n                            <div className=\"post-details\">\r\n                                <h1>r/{post.data.subreddit}</h1>\r\n                                <span>{post.data.title.substr(0, 80)}...</span>\r\n                                <h2>{post.data.domain}</h2>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>              \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        \r\n        return (\r\n            <div id=\"main-container\">\r\n                <p className=\"error-message\">{this.state.errorMsg}</p>\r\n                <Details postData={this.state.selectedData} hideOverlay={this.hideOverlay} />\r\n                <img onClick={this.goPreviousPage} src={Arrow} alt=\"Previous Page\" className={'previous-btn arrow ' + this.state.visibleArrow}/>\r\n                <img onClick={this.goNextPage} src={Arrow} alt=\"Next Page\" className={'next-btn arrow ' + this.state.visibleArrow}/>\r\n                <Masonry id='posts-container'\r\n                    elementType={'div'}\r\n                    options={this.state.masonryOptions}\r\n                    disableImagesLoaded={false}\r\n                    updateOnEachImageLoad={true}>\r\n                    {postsData}\r\n                </Masonry>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n    \r\n    state = {\r\n        posts: [],\r\n        url: 'https://www.reddit.com/r/all.json?raw_json=1&limit=65' + this.props.location.search.replace('?', '&'),\r\n        masonryOptions: {\r\n            transitionDuration: 400\r\n        },\r\n        selectedData: {\r\n            isActive: 'inactive',\r\n            post: {}\r\n        },\r\n        visibleArrow: 'invisible',\r\n        errorMsg: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var errorMsg = 'Could not retrieve posts. Please, try again.'\r\n        var query = qs.parse(this.props.location.search)\r\n        var undSort = () => {\r\n            if (query.sort === undefined){\r\n                return 'hot'\r\n            }else{\r\n                return query.sort\r\n            }\r\n        }\r\n\r\n        if(query.r === undefined){\r\n            axios.get(this.state.url).then().then(res => {this.setState({posts: res.data.data.children, visibleArrow: 'visible'})}).catch(() => this.setState({errorMsg: errorMsg}))\r\n        }else{\r\n            axios.get('https://www.reddit.com/r/'+ query.r + '/' + undSort() +'.json?raw_json=1&limit=65' + this.props.location.search.replace('?', '&')).then(res => {this.setState({posts: res.data.data.children, visibleArrow: 'visible'})}).catch(() => this.setState({errorMsg: errorMsg}))\r\n        }\r\n    }\r\n\r\n    goPreviousPage = () => {\r\n        var location = this.props.location.pathname;\r\n        var postId = this.state.posts[0].data.name;\r\n        var query = qs.parse(this.props.location.search)\r\n\r\n        if(query.r === undefined){\r\n            window.location.href = '?before=' + postId;\r\n        }else{\r\n            window.location.href = '?r=' + query.r + '&sort=' + query.sort + '&before=' + postId;\r\n        }\r\n        \r\n    }\r\n\r\n    goNextPage = () => {\r\n        var location = this.props.location.pathname;\r\n        var postId = this.state.posts.slice(-1)[0].data.name;\r\n        var query = qs.parse(this.props.location.search)\r\n\r\n        if(query.r === undefined){\r\n            window.location.href = '?after=' + postId;\r\n        }else{\r\n            window.location.href = '?r=' + query.r + '&sort=' + query.sort + '&after=' + postId;\r\n        }\r\n    }\r\n\r\n    showOverlay = (data) => {\r\n        this.setState({\r\n            selectedData: {\r\n                isActive: 'active',\r\n                post: data\r\n            }\r\n        })\r\n    }\r\n\r\n    hideOverlay = () => {\r\n        this.setState({\r\n            selectedData: {\r\n                isActive: 'inactive',\r\n                post: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    isNSFW = (data) => {\r\n        if(data.over_18 === true){\r\n            return 'blur'\r\n        }else{\r\n            return ''\r\n        }\r\n    }\r\n\r\n    NSFWFlag = (data) => {\r\n        if(data.over_18 === true){\r\n            return (\r\n                <span className=\"flag nsfw\" style={{backgroundColor: '#9e2f2fcc'}}>nsfw</span>\r\n            )\r\n        }else{\r\n            return ''\r\n        }\r\n    }\r\n\r\n    dataType = (data) => {\r\n        const url = data.url.split('.').slice(-1)[0]\r\n        const conditions = {\r\n            image: ['i.redd.it', 'imgur.com'],\r\n            video: ['v.redd.it', 'youtu.be', 'youtube.com', 'clips.twitch.tv', 'streamable.com', 'pornhub.com', 'youporn.com'],\r\n            gif: ['gfycat.com',]\r\n        }\r\n\r\n        if(conditions.gif.includes(data.domain)){\r\n            return 'gif'\r\n\r\n        }else if(conditions.video.includes(data.domain)){\r\n            return 'video'\r\n\r\n        }else if(conditions.image.includes(data.domain)){\r\n            return 'image'\r\n\r\n        }else switch(url){\r\n            case 'gifv':\r\n                return 'gif'\r\n\r\n            case 'gif':\r\n                return 'gif'\r\n\r\n            case 'jpg':\r\n                return 'image'\r\n                \r\n            case 'png':\r\n                return 'image'\r\n\r\n            default:\r\n                return 'ex-img'\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostsGrid;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n//Styles\nimport './styles/App.css';\n\n//Components\nimport SearchBar from './components/SearchBar'\nimport PostsGrid from './components/PostsGrid'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<a id=\"logo-anchor\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.github.com/tsuna2221\"><div id=\"page-logo\"></div></a>\n\t\t\t\t\t<SearchBar/>\n\t\t\t\t\t<Route path=\"/\" component={PostsGrid}></Route>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    subreddit: '',\r\n    sortBy: ''\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if(action.type === \"UPDATE_SEARCH\"){\r\n        initState.subreddit = action.subreddit\r\n    }\r\n\r\n    if(action.type === \"UPDATE_SORT\"){\r\n        initState.sortBy = action.sortBy\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/Arrow.9e006c7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/SubmitSearch.fe56f6da.svg\";","module.exports = __webpack_public_path__ + \"static/media/SettingsButton.15c7ebf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloseButton.80979d47.svg\";"],"sourceRoot":""}